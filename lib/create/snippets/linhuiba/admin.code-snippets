{
	// Place your linhuiba_admin 工作区 snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"console.log('${1|1,2,3,4|}');", // 设置默认可选项
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
  "邻汇吧后台search模板": {
		"prefix": "search",
		"description": "邻汇吧后台search模板",
		"body": [
			"<!-- 筛选 -->",
			"<template>",
			"  <SearchForm",
			"    ref=\"searchForm\"",
			"    :model=\"searchParams\"",
			"    class=\"mt-10\"",
			"    @reset=\"clear()\"",
			"    @loadData=\"loadData(1)\">",
			"    <StateTab",
			"      v-model=\"searchParams.status\"",
			"      :options=\"selection.statuses\"",
			"      class=\"mb-20\"",
			"      @change=\"loadData(1)\"",
			"    >",
			"      <template v-slot:confirming=\"{ item }\">",
			"        <div>",
			"          {{ item.label }}",
			"          <span class=\"linhuiba-font-danger linhuiba-font-bold\">",
			"            {{ confirmingCount > 99 ? '99+' : confirmingCount }}",
			"          </span>",
			"        </div>",
			"      </template>",
			"    </StateTab>",
			"    <div>",
			"      <FormInput",
			"        v-model=\"searchParams.keyword\"",
			"        prop=\"keyword\"",
			"        label=\"员工：\"",
			"        maxlength=\"50\"",
			"        placeholder=\"请输入员工姓名/手机号\"",
			"      />",
			"      <FormSelect",
			"        v-model=\"searchParams.position_id\"",
			"        prop=\"position_id\"",
			"        label=\"岗位：\"",
			"        :options=\"selection.positions\"",
			"        @change=\"loadData(1)\"",
			"      />",
			"    </div>",
			"",
			"    <template v-slot:reset>清空并搜索</template>",
			"",
			"    <template v-slot:extra>",
			"      <ElButton v-if=\"permissions.includes('员工编辑')\" type=\"primary\" @click=\"edit()\">新增</ElButton>",
			"    </template>",
			"  </SearchForm>",
			"",
			"</template>",
			"",
			"<script>",
			"// import { isIE9 } from '@/plugins/tools.js';",
			"import SearchForm from '@/common/components/SearchForm/index.vue';",
			"import StateTab from '@/common/components/StateTab/index.vue';",
			"import FormInput from '@/common/components/Form/FormInput.vue';",
			"import FormSelect from '@/common/components/Form/FormSelect.vue';",
			"",
			"export default {",
			"  name: 'Search',",
			"  components: {",
			"    SearchForm,",
			"    StateTab,",
			"    FormInput,",
			"    FormSelect",
			"  },",
			"  data() {",
			"    return {",
			"",
			"      confirmingCount: 0, // 待确认数",
			"",
			"      selection: {",
			"        statuses: [",
			"          { value: null, label: '全部' },",
			"          { value: 0, label: '待确认', slotName: 'confirming' },",
			"          { value: 1, label: '已到账' },",
			"          { value: 2, label: '未到账' },",
			"          { value: 3, label: '已拒绝' },",
			"          { value: 4, label: '待到账' }",
			"        ],",
			"        // 岗位",
			"        positions: []",
			"      },",
			"",
			"      // 搜索条件",
			"      searchParams: {}",
			"",
			"    };",
			"  },",
			"",
			"  computed: {",
			"    permissions() {",
			"      return this.\\$store.state.permissions;",
			"    }",
			"  },",
			"",
			"  created() {",
			"    this.initSearchParamsData(this.getQueryData());",
			"  },",
			"",
			"  activated() {",
			"    this.queryChange();",
			"  },",
			"",
			"  mounted() {",
			"    this.getSelection();",
			"  },",
			"",
			"  methods: {",
			"",
			"    loadData(...rest) {",
			"      this.\\$emit('loadData', ...rest);",
			"    },",
			"",
			"    // 获取初始化的搜索表单",
			"    getOriSearchParamsData() {",
			"      return {",
			"        status: 0,",
			"        position_id: null, // 岗位id",
			"        keyword: null // 关键词",
			"      };",
			"    },",
			"",
			"    /**",
			"     * @description: 初始化搜索表单",
			"     * @param {*} extraData 需要并入的参数",
			"     * @return {*}",
			"     */",
			"    initSearchParamsData(extraData = {}) {",
			"      this.searchParams = Object.assign(this.getOriSearchParamsData(), extraData);",
			"    },",
			"",
			"    // 获取路由传参",
			"    getQueryData() {",
			"      // 只在当前页面获取路由参数",
			"      if (this.\\$route.path !== '/orders') {",
			"        return {};",
			"      }",
			"      const queryData = {};",
			"      const query = this.\\$route.query;",
			"",
			"      // 接收路由参数",
			"      if (Object.keys(query).length > 0) {",
			"        const searchParams = this.getOriSearchParamsData();",
			"        // queryData.status = null;",
			"",
			"        // 遍历query，并将存在于searchParams key中的值赋值到searchParams中",
			"        Object.keys(query).forEach(key => {",
			"          const item = query[key];",
			"          if (searchParams[key] !== undefined) {",
			"            // TODO",
			"            if (key === 'id') {",
			"              queryData.id = +item;",
			"            } else {",
			"              queryData[key] = item;",
			"            }",
			"          }",
			"",
			"          // 对于特殊的query额外赋值",
			"          //",
			"        });",
			"",
			"        // // 获取完query后重置路由",
			"        // if (!isIE9()) {",
			"        //   this.\\$router.replace('/resources/manage');",
			"        // }",
			"      }",
			"",
			"      return queryData;",
			"    },",
			"",
			"    // 如果存在路由参数，接收并更新列表",
			"    queryChange() {",
			"      // TODO",
			"      if (Object.keys(this.\\$route.query).length === 0) {",
			"        return;",
			"      }",
			"      if (this.\\$route.path === '/resources/manage') {",
			"        this.initSearchParamsData(this.getQueryData());",
			"        this.loadData();",
			"      }",
			"    },",
			"",
			"    /**",
			"     * @description: 清空",
			"     * @param {*} refresh 是否刷新列表",
			"     * @return {*}",
			"     */",
			"    clear(refresh = true) {",
			"      this.searchParams = {",
			"        ... this.getOriSearchParamsData(),",
			"        status: this.searchParams.status",
			"      };",
			"      this.\\$emit('clear');",
			"      this.\\$emit('clearSort');",
			"",
			"      refresh && this.loadData(1);",
			"    },",
			"",
			"    // 获取选项数据",
			"    getSelection() {",
			"      Object.assign(this.selection, {",
			"        positions: [",
			"          { value: 1, label: '人事' },",
			"          { value: 2, label: '财务' }",
			"        ]",
			"      });",
			"    },",
			"",
			"    // 新增/编辑",
			"    edit() {",
			"      this.\\$emit('edit');",
			"    }",
			"",
			"  }",
			"};",
			"</script>",
			"",
			"<style lang=\"scss\" type=\"text/css\" scoped>",
			".el-form /deep/ .el-form-item {",
			"",
			"  &__label {",
			"    width: 120px;",
			"  }",
			"",
			"}",
			"</style>",
			"",
		]
	},
}